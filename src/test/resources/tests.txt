# basic
1 + 1

# order of operation
1 + 1 * 2

# order of operation 2
18 - 2 * -0.5

# order of division
12 / 2 / 2

# binary
true ? 10

# ternary
false ? 5 : 10

# greater or equal
3 >= 4

# multiline
temp.test = 33; return temp.test * 2;

# backwards
temp.test = 33; return 10 * temp.test;

# return
temp.test = 4; return temp.test; return 5;

# math
math.pow(math.clamp(500, 0, 3), 2)

# lerp rotate
math.lerprotate(10, 380, 0.5) + math.lerprotate(50, -10, 0.25)

# inverse trigonometry
math.round(math.acos(-1) + math.atan2(2, 4))

# pixel case
temp.level = 10; 10 * temp.level + (temp.level * temp.level * 4)

# eq, neq
5 == 3
5 == 5
5 != 3
5 != 5

# more complex eq, neq
math.sqrt(4*4 + 3*3) == 5
math.sqrt(7*7 + 24*24) == 25
3*3*3 == 27
3*3*3 == 3*(2*2+5)

# literal
3
5
9
10
-5
16
3

# math functions
math.abs(-5)
math.abs(5)
math.abs(-0)
math.abs(0)
math.acos(20)
math.acos(30)
math.asin(30)
math.atan(30)
math.atan2(30, 40)
math.ceil(30.5)
math.ceil(30.1)
math.ceil(30.9)
math.clamp(30, 10, 20)
math.clamp(30, 10, 40)
math.clamp(30, 40, 50)
math.cos(30)
math.exp(10)
math.floor(30.5)
math.floor(30.1)
math.floor(30.9)
math.hermite_blend(0.5)
math.hermite_blend(0.1)
math.hermite_blend(0.9)
math.lerp(10, 20, 0.5)
math.lerp(10, 20, 0.1)
math.lerp(10, 20, 0.9)
math.lerprotate(10, 20, 0.5)
math.lerprotate(10, 20, 0.1)
math.lerprotate(10, 20, 0.9)
math.ln(10)
math.max(10, 20)
math.max(20, 10)
math.min(-5, -2)
math.min(-2, -5)
math.min(10, 20)
math.min_angle(360)
math.min_angle(720)
math.min_angle(1080)
math.mod(10, 3)
math.mod(10, 5)
math.mod(10, 10)
math.pi
math.pow(2, 3)
math.pow(2, 4)
math.round(10.5)
math.round(10.1)
math.round(10.9)
math.sin(30)
math.sin(60)
math.sqrt(4)
math.sqrt(9)
math.sqrt(16)
math.trunc(10.5)
math.trunc(10.1)
math.trunc(10.9)
math.trunc(-20.4)

# invalid calls
math.abs()
math.abs(5, 20)
math.abs
math.acos()
math.acos(0.333333, 0.666666)
math.acos
math.asin()
math.asin(0.333333, 0.666666)
math.asin
math.atan()
math.atan(30, 40)
math.atan
math.atan2()
math.atan2(30, 40, 50)
math.atan2(20)
math.atan2
math.ceil()
math.ceil
math.ceil(1, 2, 3)
math.clamp()
math.clamp(1, 2)
math.clamp(1)
math.clamp
math.cos()
math.cos
math.cos(1, 3, 5)
math.exp
math.exp()
math.exp(-12, 20)
math.floor
math.floor()
math.floor(1, 2, 3)
math.hermite_blend(60)
math.hermite_blend()
math.hermite_blend
math.hermite_blend(0.1, 0.2, 0.3)
math.lerp(10, 20, 50, 20)
math.lerp
math.lerp()
math.lerp(1, 2)
math.lerp(1, 2, 3)

# stuff that can't be parsed
dkdqw 912939 1jm,m h√±√± `ps
skdkdqkkdkj !!! `dpd0 20
asm dmjwj 18 818
,damdm mllppp
```
\\\\\\\\
__√ë√ëP√ëPp`'''002222
for_eachfffff)))))
))))))))))))))))))))))))))))))))))))))))))))))))))))))))
((((((((((((((((((((((((((((((((((((((
{{{{{{{{{{{{{{{{{{{{{{{{
}}}}}}}}}}}}}}}}}}}}}}}}
}}}}}}}}}}}}}}}}}}}}}}}}
}}}}}}}}}}\\\\\\\(((000?????                          ***^^^````^^^^!!!\\\
üò∂üò∂‚Äçüòêüòë