# basic
1 + 1

# order of operation
1 + 1 * 2

# order of operation 2
18 - 2 * -0.5

# order of division
12 / 2 / 2

# binary
true ? 10

# ternary
false ? 5 : 10

# greater or equal
3 >= 4

# multiline
temp.test = 33; return temp.test * 2;

# backwards
temp.test = 33; return 10 * temp.test;

# return
temp.test = 4; return temp.test; return 5;

# math
math.pow(math.clamp(500, 0, 3), 2)

# lerp rotate
math.lerprotate(10, 380, 0.5) + math.lerprotate(50, -10, 0.25)

# inverse trigonometry
math.round(math.acos(-1) + math.atan2(2, 4))

# pixel case
temp.level = 10; 10 * temp.level + (temp.level * temp.level * 4)

# eq, neq
5 == 3
5 == 5
5 != 3
5 != 5

# more complex eq, neq
math.sqrt(4*4 + 3*3) == 5
math.sqrt(7*7 + 24*24) == 25
3*3*3 == 27
3*3*3 == 3*(2*2+5)

# literal
3
5
9
10
-5
16
3